<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring.dao.board">
    <resultMap id="BoardResult" type="com.j.spring.board.model.BoardVO">
        <result property="num" column="NUM" />
        <result property="writer" column="WRITER" />
        <result property="email" column="EMAIL" />
        <result property="subject" column="SUBJECT" />
        <result property="pass" column="PASS"/>
        <result property="readcount" column="READCOUNT"/>
        <result property="content" column="CONTENT"/>
        <result property="regdate" column="REGDATE" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--전체 글수 : 검색 (ALL) -->
    <select id="getAllCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from boardmvc
        <if test="search_text != null">
        where WRITER = #{search_text} or
        SUBJECT like CONCAT('%',#{search_text},'%') or CONTENT like CONCAT('%',#{search_text},'%')
        </if>
        <if test="search_text != ''">
            where WRITER = #{search_text} or
            SUBJECT like CONCAT('%',#{search_text},'%') or CONTENT like CONCAT('%',#{search_text},'%')
        </if>
    </select>

    <!--전체 글수 : 검색(!)-->
    <select id="getOptionCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from boardmvc
        <choose>
            <when test="search_type.equals('writer')">
                where WRITER = #{search_text}
            </when>
            <when test="search_type.equals('subject')">
                where SUBJECT like CONCAT('%',#{search_text},'%')
            </when>
            <when test="search_type.equals('content')">
                where CONTENT like CONCAT('%',#{search_text},'%')
            </when>
        </choose>
    </select>

    <!--List(목록보기) :전체 -->

    <select id="getList" parameterType="java.util.Map" resultMap="BoardResult" >
        <![CDATA[
        SELECT * FROM (SELECT @rownum := @rownum + 1 AS rownum,
        num,
        writer,
        pass,
        email,
        subject,
        content,
        regdate,
        readcount
          FROM (SELECT @rownum := 0)dummy,
               (SELECT * FROM BOARDMVC ORDER BY NUM DESC)rootMVC
          where (@rownum := 0) = 0)rnumMVC
          where rownum >= #{startRow} and rownum <= #{endRow}
        ]]>
    </select>

    <!--List(목록보기) : 검색(All) -->
    <select id="getAllList" parameterType="java.util.Map" resultMap="BoardResult" >
        <![CDATA[
        SELECT * FROM (SELECT @rownum := @rownum + 1 AS rownum,
        num,
        writer,
        pass,
        email,
        subject,
        content,
        regdate,
        readcount
          FROM (SELECT @rownum := 0)dummy,
               (SELECT * FROM BOARDMVC
                WHERE writer = #{search_text} or
                      SUBJECT like CONCAT('%',#{search_text},'%') or
                      CONTENT like CONCAT('%',#{search_text},'%')
               ORDER BY NUM DESC)rootMVC
          where (@rownum := 0) = 0)rnumMVC
          where rownum >= #{startRow} and rownum <= #{endRow}
        ]]>
    </select>

    <!-- List(목록보기) : 검색(writer) -->
    <select id="getWriterList" parameterType="java.util.Map" resultMap="BoardResult">
         <![CDATA[
        SELECT * FROM (SELECT @rownum := @rownum + 1 AS rownum,
        num,
        writer,
        pass,
        email,
        subject,
        content,
        regdate,
        readcount
          FROM (SELECT @rownum := 0)dummy,
               (SELECT * FROM BOARDMVC WHERE writer = #{search_text} ORDER BY NUM DESC)rootMVC
          where (@rownum := 0) = 0)rnumMVC
          where rownum >= #{startRow} and rownum <= #{endRow}
        ]]>

    </select>

    <!-- List(목록보기) : 검색(subject) -->
    <select id="getSubjectList" parameterType="java.util.Map" resultMap="BoardResult">
         <![CDATA[
        SELECT * FROM (SELECT @rownum := @rownum + 1 AS rownum,
        num,
        writer,
        pass,
        email,
        subject,
        content,
        regdate,
        readcount
          FROM (SELECT @rownum := 0)dummy,
               (SELECT * FROM BOARDMVC WHERE SUBJECT like CONCAT('%',#{search_text},'%') ORDER BY NUM DESC)rootMVC
          where (@rownum := 0) = 0)rnumMVC
          where rownum >= #{startRow} and rownum <= #{endRow}
        ]]>

    </select>

    <!-- List(목록보기) : 검색(Content) -->
    <select id="getContentList" parameterType="java.util.Map" resultMap="BoardResult">
         <![CDATA[
        SELECT * FROM (SELECT @rownum := @rownum + 1 AS rownum,
        num,
        writer,
        pass,
        email,
        subject,
        content,
        regdate,
        readcount
          FROM (SELECT @rownum := 0)dummy,
               (SELECT * FROM BOARDMVC WHERE CONTENT like CONCAT('%',#{search_text},'%') ORDER BY NUM DESC)rootMVC
          where (@rownum := 0) = 0)rnumMVC
          where rownum >= #{startRow} and rownum <= #{endRow}
        ]]>
    </select>

    <!-- 글쓰기 -->
    <insert id="insertArticle" parameterType="com.j.spring.board.model.BoardVO">
        INSERT INTO boardmvc(WRITER, EMAIL, SUBJECT, PASS, REGDATE, CONTENT)
        VALUES(#{writer},#{email},#{subject},#{pass},now(),#{content})
    </insert>

    <!-- 글보기 -->
    <update id="upReadCount" parameterType="java.lang.Integer">
        UPDATE boardmvc SET READCOUNT = READCOUNT+1 WHERE NUM = #{NUM}
    </update>

    <select id="getArticle" parameterType="java.lang.Integer" resultMap="BoardResult">
        SELECT * FROM boardmvc where NUM = #{num}
    </select>

    <!-- 비밀번호 가져오기 -->
    <select id="getPass" parameterType="java.lang.Integer" resultType= "String" >
        SELECT PASS FROM boardmvc WHERE NUM=#{num}
    </select>

    <!--글 수정 -->
    <update id="modifyArticle" parameterType="com.j.spring.board.model.BoardVO">
        UPDATE boardmvc SET
                        WRITER=#{writer},
                        EMAIL=#{email},
                        SUBJECT=#{subject},
                        CONTENT=#{content}
                        WHERE NUM=#{num}
    </update>

    <!-- 글 삭제 -->
    <update id="deleteArticle" parameterType="java.lang.Integer">
        DELETE from boardmvc WHERE num=#{num}
    </update>


    <select id="testList" resultMap="BoardResult">
       select * from boardmvc
    </select>



</mapper>